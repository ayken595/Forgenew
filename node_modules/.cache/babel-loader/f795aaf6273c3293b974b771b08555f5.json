{"remainingRequest":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/views/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/views/list.vue","mtime":1574352500766},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _defineProperty from \"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { api } from \"../main.js\";\nimport filters from \"@/components/filters\";\nimport pagination from \"@/components/pagination\";\nexport default {\n  name: \"list\",\n  components: {\n    filters: filters,\n    pagination: pagination\n  },\n  data: function data() {\n    return {\n      showDetailsButton: true,\n      columnSortName: null,\n      columnSortOrder: \"asc\",\n      // asc, desc\n      incurrent: null,\n      records: 0,\n      total: 3,\n      current: 1,\n      columns: [{\n        name: \"ID\",\n        code: \"id\",\n        is_sortable: true,\n        is_filterable: true,\n        datatype: \"string\",\n        query: \"\"\n      }, {\n        name: \"\",\n        code: \"avatar\",\n        is_sortable: false,\n        is_filterable: false,\n        datatype: \"string\",\n        query: \"\"\n      }, {\n        name: \"Name\",\n        code: \"name\",\n        is_sortable: true,\n        is_filterable: true,\n        datatype: \"string\",\n        query: \"\"\n      }, {\n        name: \"Sex\",\n        code: \"sex\",\n        is_sortable: true,\n        is_filterable: true,\n        datatype: [\"male\", \"female\"],\n        query: null\n      }, {\n        name: \"Phone\",\n        code: \"phone\",\n        is_sortable: false,\n        is_filterable: true,\n        datatype: \"string\",\n        query: \"\"\n      }, {\n        name: \"Email\",\n        code: \"email\",\n        is_sortable: false,\n        is_filterable: false,\n        datatype: \"string\",\n        query: \"\"\n      }, {\n        name: \"Is active\",\n        code: \"is_active\",\n        is_sortable: true,\n        is_filterable: true,\n        datatype: \"boolean\",\n        query: null\n      }],\n      listitems: [],\n      filters: []\n    };\n  },\n  computed: {},\n  created: function created() {\n    this.askForPosts();\n  },\n  methods: {\n    objectToQuery: function objectToQuery(obj) {\n      return Object.keys(obj).reduce(function (str, key, i) {\n        var delimiter = i === 0 ? \"?\" : \"&\";\n        var keyname = encodeURIComponent(key);\n        var val = encodeURIComponent(obj[key]);\n        return [str, delimiter, keyname, \"=\", val].join(\"\");\n      }, \"\");\n    },\n    askForPosts: function () {\n      var _askForPosts = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var query, meta, _ref, ok, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.filters);\n                console.log(\"change page\");\n                query = {\n                  _sort: this.columnSortName,\n                  _order: this.columnSortOrder,\n                  _page: this.current,\n                  q: this.filters.map(function (val) {\n                    return \"\".concat(val.code, \":\").concat(val.query);\n                  }).join(\"||\")\n                };\n                console.log(query, this.objectToQuery(query)); // google: object to url\n\n                meta = {\n                  current: 1,\n                  total: 3\n                };\n                _context.next = 7;\n                return api.get(\"posts\".concat(this.objectToQuery(query)));\n\n              case 7:\n                _ref = _context.sent;\n                ok = _ref.ok;\n                data = _ref.data;\n\n                if (ok) {\n                  this.listitems = data.map(function (r) {\n                    return _objectSpread({}, r, {\n                      detailsVisible: false\n                    });\n                  }); //this.currentPage = meta.current;\n\n                  this.total = meta.total;\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function askForPosts() {\n        return _askForPosts.apply(this, arguments);\n      }\n\n      return askForPosts;\n    }(),\n    setColumnSort: function setColumnSort(columnCode) {\n      if (columnCode === this.columnSortName) {\n        this.columnSortOrder = this.columnSortOrder === \"asc\" ? \"desc\" : \"asc\";\n      } else {\n        this.columnSortName = columnCode;\n      }\n\n      this.askForPosts();\n    },\n    toggleDetails: function toggleDetails(dataRow) {\n      dataRow.detailsVisible = !dataRow.detailsVisible;\n    },\n    onInput: function onInput() {\n      var filters = this.columns.filter(function (e) {\n        return e.is_filterable && e.query != \"\" && e.query != null;\n      });\n      this.filters = filters;\n      this.askForPosts();\n    },\n    pageInput: function pageInput() {\n      if (this.incurrent <= this.total && this.incurrent > 0) {\n        this.current = this.incurrent;\n        this.askForPosts();\n      } else {\n        this.incurrent = null;\n      }\n    },\n    onChange: function onChange(column, element) {\n      console.log(column, element);\n    },\n    nextPage: function nextPage() {\n      if (this.current < this.total) this.current++;\n      this.askForPosts();\n      console.log(this.current);\n    },\n    previousPage: function previousPage() {\n      if (this.current > 1) this.current--;\n      this.askForPosts();\n      console.log(this.current);\n    },\n    firstPage: function firstPage() {\n      this.current = 1;\n      this.askForPosts();\n      console.log(this.current);\n    },\n    lastPage: function lastPage() {\n      this.current = this.total;\n      this.askForPosts();\n      console.log(this.current);\n    }\n  }\n};",{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div><div class=\"filters\">\n    <filters/>\n    </div>\n    <div class=\"pagination\">\n      \n      <p>\n        <button @click=\"firstPage()\"> &larr;&larr;</button>\n        <button @click=\"previousPage()\">&larr;</button>\n        <input class=\"paginator\" type=\"number\" v-model=\"incurrent\" @input=\"pageInput()\" placeholder=\"Page\"/>\n        <button @click=\"nextPage()\">&rarr;</button>\n        <button @click=\"lastPage()\">&rarr;&rarr;</button>\n        {{current}} of {{total}}<br/>\n        total records {{ records }}\n      </p>\n    </div>\n    <div class=\"tabelka\">\n      <table>\n        <thead>\n          <tr class=\"column-names\">\n            <th v-if=\"showDetailsButton\"></th>\n            <th v-for=\"(column, cidx) in columns\" :key=\"cidx\">\n              <span v-if=\"!column.is_sortable\">{{ column.name }}</span>\n              <a v-else href=\"#\" @click.prevent=\"setColumnSort(column.code)\">\n                {{ column.name }}\n                <template v-if=\"columnSortName === column.code\">\n                  <span v-if=\"columnSortOrder === 'asc'\">&uarr;</span>\n                  <span v-else>&darr;</span>\n                </template>\n              </a>\n            </th>\n          </tr>\n          <tr class=\"column-filters\">\n            <th v-if=\"showDetailsButton\"></th>\n            <th v-for=\"(column, cidx) in columns\" :key=\"cidx\">\n              <div v-if=\"column.is_filterable\">\n                <div v-if=\"column.datatype === 'string'\">\n                  <input type=\"text\" v-model=\"column.query\" @input=\"onInput()\" />\n                </div>\n                <div v-if=\"column.datatype === 'boolean'\">\n                  <select @change=\"onChange(column, $event)\">\n                    <option :value=\"null\">All</option>\n                    <option :value=\"true\">True</option>\n                    <option :value=\"false\">False</option>\n                  </select>\n                </div>\n                <div v-if=\"typeof column.datatype === 'Object'\">\n                  <select>\n                    <option :value=\"null\">All</option>\n                    <option\n                      v-for=\"(type, cdidx) in column.datatype\"\n                      :key=\"cdidx\"\n                      :value=\"null\"\n                    >{{ type }}</option>\n                  </select>\n                  {{column.query}}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody v-for=\"(item, id) in listitems\" :key=\"id\">\n          <tr>\n            <td v-if=\"showDetailsButton\">\n              <button\n                v-if=\"typeof item.details !== 'undefined'\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                @click.prevent=\"toggleDetails(item)\"\n              >V</button>\n            </td>\n            <td v-for=\"(column, cidx) in columns\" :key=\"cidx\">\n              <template v-if=\"column.code === 'avatar'\">\n                <img width=\"80\" height=\"80\" :src=\"item['avatar']\" alt />\n              </template>\n              <template v-else-if=\"column.code === 'sex'\">\n                <span v-if=\"item['sex'] === 'male'\">Chop</span>\n                <span v-else>Baba</span>\n              </template>\n              <template v-else-if=\"column.code === 'name'\">\n                <router-link :to=\"`details/${item['id']}`\">{{ item[column.code] }}</router-link>\n              </template>\n              <template v-else>{{ item[column.code] }}</template>\n            </td>\n            <!-- <td>{{item.id}}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<router-link :to=\"`details/${item.id}`\">{{item.title}}</router-link>\n\t\t\t\t\t</td>\n            <td>{{item.author}}</td>-->\n          </tr>\n          <tr v-if=\"typeof item.details !== 'undefined' && item.detailsVisible\">\n            <td colspan=\"999\">\n              <strong>Opis:</strong>\n              {{ item.details.description }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { api } from \"../main.js\";\nimport filters from \"@/components/filters\";\nimport pagination from \"@/components/pagination\";\n\nexport default {\n  name: \"list\",\n  components: {\n      filters,\n      pagination,\n\t\t},\n  data() {\n    return {\n      showDetailsButton: true,\n      columnSortName: null,\n      columnSortOrder: \"asc\", // asc, desc\n      incurrent: null,\n      records:0,\n      total: 3,\n      current: 1,\n      columns: [\n        {\n          name: \"ID\",\n          code: \"id\",\n          is_sortable: true,\n          is_filterable: true,\n          datatype: \"string\",\n          query: \"\"\n        },\n        {\n          name: \"\",\n          code: \"avatar\",\n          is_sortable: false,\n          is_filterable: false,\n          datatype: \"string\",\n          query: \"\"\n        },\n        {\n          name: \"Name\",\n          code: \"name\",\n          is_sortable: true,\n          is_filterable: true,\n          datatype: \"string\",\n          query: \"\"\n        },\n        {\n          name: \"Sex\",\n          code: \"sex\",\n          is_sortable: true,\n          is_filterable: true,\n          datatype: [\"male\", \"female\"],\n          query: null\n        },\n        {\n          name: \"Phone\",\n          code: \"phone\",\n          is_sortable: false,\n          is_filterable: true,\n          datatype: \"string\",\n          query: \"\"\n        },\n        {\n          name: \"Email\",\n          code: \"email\",\n          is_sortable: false,\n          is_filterable: false,\n          datatype: \"string\",\n          query: \"\"\n        },\n        {\n          name: \"Is active\",\n          code: \"is_active\",\n          is_sortable: true,\n          is_filterable: true,\n          datatype: \"boolean\",\n          query: null\n        }\n      ],\n      listitems: [],\n      filters: []\n    };\n  },\n  computed: {},\n  created() {\n    this.askForPosts();\n  },\n  methods: {\n    objectToQuery(obj) {\n      return Object.keys(obj).reduce((str, key, i) => {\n        let delimiter = i === 0 ? \"?\" : \"&\";\n        let keyname = encodeURIComponent(key);\n        let val = encodeURIComponent(obj[key]);\n        return [str, delimiter, keyname, \"=\", val].join(\"\");\n      }, \"\");\n    },\n    async askForPosts() {\n      console.log(this.filters);\n      console.log(\"change page\");\n      const query = {\n        _sort: this.columnSortName,\n        _order: this.columnSortOrder,\n        _page: this.current,\n        q: this.filters.map(val => `${val.code}:${val.query}`).join(\"||\")\n      };\n      console.log(query, this.objectToQuery(query));\n      // google: object to url\n      const meta = { current: 1, total: 3 };\n      const { ok, data } = await api.get(`posts${this.objectToQuery(query)}`);\n      if (ok) {\n        this.listitems = data.map(r => ({ ...r, detailsVisible: false }));\n        //this.currentPage = meta.current;\n        this.total = meta.total;\n      }\n    },\n    setColumnSort(columnCode) {\n      if (columnCode === this.columnSortName) {\n        this.columnSortOrder = this.columnSortOrder === \"asc\" ? \"desc\" : \"asc\";\n      } else {\n        this.columnSortName = columnCode;\n      }\n      this.askForPosts();\n    },\n    toggleDetails(dataRow) {\n      dataRow.detailsVisible = !dataRow.detailsVisible;\n    },\n    onInput() {\n      let filters = this.columns.filter(\n        e => e.is_filterable && e.query != \"\" && e.query != null\n      );\n      this.filters = filters;\n      this.askForPosts();\n    },\n    pageInput() {\n      if (this.incurrent <= this.total && this.incurrent > 0) {\n        this.current = this.incurrent;\n        this.askForPosts();\n      } else {\n        this.incurrent = null;\n      }\n    },\n    onChange(column, element) {\n      console.log(column, element);\n    },\n    nextPage() {\n      if (this.current < this.total) this.current++;\n      this.askForPosts();\n      console.log(this.current);\n    },\n    previousPage() {\n      if (this.current > 1) this.current--;\n      this.askForPosts();\n      console.log(this.current);\n    },\n    firstPage() {\n      this.current = 1;\n      this.askForPosts();\n      console.log(this.current);\n    },\n    lastPage() {\n      this.current = this.total;\n      this.askForPosts();\n      console.log(this.current);\n    }\n  }\n};\n</script>\n\n<!-- ------======STYLE=====------ -->\n\n<style>\n.filters{\n  width:100%;\n  margin:auto;\n  padding:5%;\n}\n.tabelka {\n  overflow-x: auto;\n}\ntable {\n  width: 90%;\n  margin: auto;\n  border: 1px solid #fff;\n  background-color: #fff;\n}\ntr,\nth {\n  padding: 8px;\n}\ntr:nth-child(even) {\n  background-color: #ddd;\n  color: #222;\n}\n.pagination {\n  width: 30%;\n  margin: auto;\n  float: none;\n  padding-top: 30px;\n  display:block;\n}\ntr:hover {\n  background-color: #ddd;\n  color: #000;\n}\n\n@media only screen and (max-width: 760px) {\n  /* Force table to not be like tables anymore */\n  table,\n  thead,\n  tbody,\n  th,\n  td,\n  tr {\n    display: block;\n  }\n\n  /* Hide table headers (but not display: none;, for accessibility) */\n  thead tr {\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n  }\n\n  tr {\n    border: 1px solid #ccc;\n  }\n\n  td {\n    /* Behave  like a \"row\" */\n    border: none;\n    border-bottom: 1px solid #eee;\n    position: relative;\n    padding-left: 50%;\n  }\n\n  td:before {\n    /* Now like a table header */\n    position: absolute;\n    /* Top/left values mimic padding */\n    top: 6px;\n    left: 6px;\n    width: 45%;\n    padding-right: 10px;\n    white-space: nowrap;\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}