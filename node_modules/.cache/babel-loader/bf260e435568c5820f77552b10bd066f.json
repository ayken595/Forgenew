{"remainingRequest":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/views/ClientForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/views/ClientForm.vue","mtime":1573546378000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport moment from 'moment';\nimport find from 'lodash/find';\nimport TitleBar from '@/components/TitleBar';\nimport HeroBar from '@/components/HeroBar';\nimport Tiles from '@/components/Tiles';\nimport CardComponent from '@/components/CardComponent';\nimport FilePicker from '@/components/FilePicker';\nimport UserAvatar from '@/components/UserAvatar';\nimport Notification from '@/components/Notification';\nexport default {\n  name: 'ClientForm',\n  components: {\n    UserAvatar: UserAvatar,\n    FilePicker: FilePicker,\n    CardComponent: CardComponent,\n    Tiles: Tiles,\n    HeroBar: HeroBar,\n    TitleBar: TitleBar,\n    Notification: Notification\n  },\n  props: {\n    id: {\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      isLoading: false,\n      form: this.getClearFormObject(),\n      createdReadable: null,\n      isProfileExists: false\n    };\n  },\n  computed: {\n    titleStack: function titleStack() {\n      var lastCrumb;\n\n      if (this.isProfileExists) {\n        lastCrumb = this.form.name;\n      } else {\n        lastCrumb = 'New client';\n      }\n\n      return ['Admin', 'Clients', lastCrumb];\n    },\n    heroTitle: function heroTitle() {\n      if (this.isProfileExists) {\n        return this.form.name;\n      } else {\n        return 'Create Client';\n      }\n    },\n    heroRouterLinkTo: function heroRouterLinkTo() {\n      if (this.isProfileExists) {\n        return {\n          name: 'client.new'\n        };\n      } else {\n        return '/';\n      }\n    },\n    heroRouterLinkLabel: function heroRouterLinkLabel() {\n      if (this.isProfileExists) {\n        return 'New client';\n      } else {\n        return 'Dashboard';\n      }\n    },\n    formCardTitle: function formCardTitle() {\n      if (this.isProfileExists) {\n        return 'Edit Client';\n      } else {\n        return 'New Client';\n      }\n    }\n  },\n  created: function created() {\n    this.getData();\n  },\n  methods: {\n    getClearFormObject: function getClearFormObject() {\n      return {\n        id: null,\n        name: null,\n        company: null,\n        city: null,\n        created_date: new Date(),\n        created_mm_dd_yyyy: null,\n        progress: 0\n      };\n    },\n    getData: function getData() {\n      var _this = this;\n\n      if (this.id) {\n        axios.get('/data-sources/clients.json').then(function (r) {\n          var item = find(r.data.data, function (item) {\n            return item.id === parseInt(_this.id);\n          });\n\n          if (item) {\n            _this.isProfileExists = true;\n            _this.form = item;\n            _this.form.created_date = new Date(item.created_mm_dd_yyyy);\n            _this.createdReadable = moment(new Date(item.created_mm_dd_yyyy)).format('MMM D, Y').toString();\n          } else {\n            _this.$router.push({\n              name: 'client.new'\n            });\n          }\n        }).catch(function (e) {\n          _this.$buefy.toast.open({\n            message: \"Error: \".concat(e.message),\n            type: 'is-danger',\n            queue: false\n          });\n        });\n      }\n    },\n    input: function input(v) {\n      this.createdReadable = moment(v).format('MMM D, Y').toString();\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      this.isLoading = true;\n      setTimeout(function () {\n        _this2.isLoading = false;\n\n        _this2.$buefy.snackbar.open({\n          message: 'Demo only',\n          queue: false\n        });\n      }, 500);\n    }\n  },\n  watch: {\n    id: function id(newValue) {\n      this.isProfileExists = false;\n\n      if (!newValue) {\n        this.form = this.getClearFormObject();\n      } else {\n        this.getData();\n      }\n    }\n  }\n};",{"version":3,"sources":["ClientForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <title-bar :title-stack=\"titleStack\"/>\n    <hero-bar>\n      {{ heroTitle }}\n      <router-link slot=\"right\" :to=\"heroRouterLinkTo\" class=\"button\">\n        {{ heroRouterLinkLabel }}\n      </router-link>\n    </hero-bar>\n    <section class=\"section is-main-section\">\n      <notification class=\"is-info\">\n        <div>\n          <span><b>Demo only.</b> No data will be saved/updated</span>\n        </div>\n\n      </notification>\n      <tiles>\n        <card-component :title=\"formCardTitle\" icon=\"account-edit\" class=\"tile is-child\">\n          <form @submit.prevent=\"submit\">\n            <b-field label=\"ID\" horizontal>\n              <b-input v-model=\"form.id\" custom-class=\"is-static\" readonly />\n            </b-field>\n            <hr>\n            <b-field label=\"Avatar\" horizontal>\n              <file-picker/>\n            </b-field>\n            <hr>\n            <b-field label=\"Name\" message=\"Client name\" horizontal>\n              <b-input placeholder=\"e.g. John Doe\" v-model=\"form.name\" required />\n            </b-field>\n            <b-field label=\"Company\" message=\"Client's company name\" horizontal>\n              <b-input placeholder=\"e.g. Berton & Steinway\" v-model=\"form.company\" required />\n            </b-field>\n            <b-field label=\"City\" message=\"Client's city\" horizontal>\n              <b-input placeholder=\"e.g. Geoffreyton\" v-model=\"form.city\" required />\n            </b-field>\n            <b-field label=\"Created\" horizontal>\n              <b-datepicker\n                @input=\"input\"\n                v-model=\"form.created_date\"\n                placeholder=\"Click to select...\"\n                icon=\"calendar-today\">\n              </b-datepicker>\n            </b-field>\n            <hr>\n            <b-field label=\"Progress\" horizontal>\n              <b-slider v-model=\"form.progress\"/>\n            </b-field>\n            <hr>\n            <b-field horizontal>\n              <b-button type=\"is-primary\" :loading=\"isLoading\" native-type=\"submit\">Submit</b-button>\n            </b-field>\n          </form>\n        </card-component>\n        <card-component v-if=\"isProfileExists\" title=\"Client Profile\" icon=\"account\" class=\"tile is-child\">\n          <user-avatar :avatar=\"form.file\" class=\"image has-max-width is-aligned-center\"/>\n          <hr>\n          <b-field label=\"Name\">\n            <b-input :value=\"form.name\" custom-class=\"is-static\" readonly/>\n          </b-field>\n          <b-field label=\"Company\">\n            <b-input :value=\"form.company\" custom-class=\"is-static\" readonly/>\n          </b-field>\n          <b-field label=\"City\">\n            <b-input :value=\"form.city\" custom-class=\"is-static\" readonly/>\n          </b-field>\n          <b-field label=\"Created\">\n            <b-input :value=\"createdReadable\" custom-class=\"is-static\" readonly/>\n          </b-field>\n          <hr>\n          <b-field label=\"Progress\">\n            <progress class=\"progress is-small is-primary\" :value=\"form.progress\" max=\"100\">{{ form.progress }}</progress>\n          </b-field>\n        </card-component>\n      </tiles>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport moment from 'moment'\nimport find from 'lodash/find'\nimport TitleBar from '@/components/TitleBar'\nimport HeroBar from '@/components/HeroBar'\nimport Tiles from '@/components/Tiles'\nimport CardComponent from '@/components/CardComponent'\nimport FilePicker from '@/components/FilePicker'\nimport UserAvatar from '@/components/UserAvatar'\nimport Notification from '@/components/Notification'\n\nexport default {\n  name: 'ClientForm',\n  components: { UserAvatar, FilePicker, CardComponent, Tiles, HeroBar, TitleBar, Notification },\n  props: {\n    id: {\n      default: null\n    }\n  },\n  data () {\n    return {\n      isLoading: false,\n      form: this.getClearFormObject(),\n      createdReadable: null,\n      isProfileExists: false\n    }\n  },\n  computed: {\n    titleStack () {\n      let lastCrumb\n\n      if (this.isProfileExists) {\n        lastCrumb = this.form.name\n      } else {\n        lastCrumb = 'New client'\n      }\n\n      return [\n        'Admin',\n        'Clients',\n        lastCrumb\n      ]\n    },\n    heroTitle () {\n      if (this.isProfileExists) {\n        return this.form.name\n      } else {\n        return 'Create Client'\n      }\n    },\n    heroRouterLinkTo () {\n      if (this.isProfileExists) {\n        return { name: 'client.new' }\n      } else {\n        return '/'\n      }\n    },\n    heroRouterLinkLabel () {\n      if (this.isProfileExists) {\n        return 'New client'\n      } else {\n        return 'Dashboard'\n      }\n    },\n    formCardTitle () {\n      if (this.isProfileExists) {\n        return 'Edit Client'\n      } else {\n        return 'New Client'\n      }\n    }\n  },\n  created () {\n    this.getData()\n  },\n  methods: {\n    getClearFormObject () {\n      return {\n        id: null,\n        name: null,\n        company: null,\n        city: null,\n        created_date: new Date(),\n        created_mm_dd_yyyy: null,\n        progress: 0\n      }\n    },\n    getData () {\n      if (this.id) {\n        axios\n          .get('/data-sources/clients.json')\n          .then(r => {\n            const item = find(r.data.data, item => item.id === parseInt(this.id))\n\n            if (item) {\n              this.isProfileExists = true\n              this.form = item\n              this.form.created_date = new Date(item.created_mm_dd_yyyy)\n              this.createdReadable = moment(new Date(item.created_mm_dd_yyyy)).format('MMM D, Y').toString()\n            } else {\n              this.$router.push({ name: 'client.new' })\n            }\n          })\n          .catch(e => {\n            this.$buefy.toast.open({\n              message: `Error: ${e.message}`,\n              type: 'is-danger',\n              queue: false\n            })\n          })\n      }\n    },\n    input (v) {\n      this.createdReadable = moment(v).format('MMM D, Y').toString()\n    },\n    submit () {\n      this.isLoading = true\n\n      setTimeout(() => {\n        this.isLoading = false\n\n        this.$buefy.snackbar.open({\n          message: 'Demo only',\n          queue: false\n        })\n      }, 500)\n    }\n  },\n  watch: {\n    id (newValue) {\n      this.isProfileExists = false\n\n      if (!newValue) {\n        this.form = this.getClearFormObject()\n      } else {\n        this.getData()\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}