{"remainingRequest":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/components/GrowingNumber.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/components/GrowingNumber.vue","mtime":1573546378000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport numeral from 'numeral';\nexport default {\n  name: 'GrowingNumber',\n  props: {\n    prefix: {\n      type: String,\n      default: null\n    },\n    suffix: {\n      type: String,\n      default: null\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n  data: function data() {\n    return {\n      newValue: 0,\n      step: 0\n    };\n  },\n  computed: {\n    newValueFormatted: function newValueFormatted() {\n      return this.newValue < 1000 ? this.newValue : numeral(this.newValue).format('0,0');\n    }\n  },\n  mounted: function mounted() {\n    this.growInit();\n  },\n  methods: {\n    growInit: function growInit() {\n      var m = this.value / (this.duration / 25);\n      this.grow(m);\n    },\n    grow: function grow(m) {\n      var _this = this;\n\n      var v = Math.ceil(this.newValue + m);\n\n      if (v > this.value) {\n        this.newValue = this.value;\n        return false;\n      }\n\n      this.newValue = v;\n      setTimeout(function () {\n        _this.grow(m);\n      }, 25);\n    }\n  },\n  watch: {\n    value: function value() {\n      this.growInit();\n    }\n  }\n};",{"version":3,"sources":["GrowingNumber.vue"],"names":[],"mappings":";;;;;;;AAOA,OAAA,OAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAbA,GAFA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAzBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,aAAA,KAAA,QAAA,GAAA,IAAA,GAAA,KAAA,QAAA,GAAA,OAAA,CAAA,KAAA,QAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA;AAHA,GA1BA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,QAAA;AACA,GAjCA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,QAAA,GAAA,EAAA,CAAA;AACA,WAAA,IAAA,CAAA,CAAA;AACA,KAJA;AAKA,IAAA,IALA,gBAKA,CALA,EAKA;AAAA;;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,QAAA,GAAA,CAAA,CAAA;;AAEA,UAAA,CAAA,GAAA,KAAA,KAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA,KAAA;AACA,eAAA,KAAA;AACA;;AAEA,WAAA,QAAA,GAAA,CAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA,OAFA,EAEA,EAFA,CAAA;AAGA;AAjBA,GAlCA;AAqDA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,QAAA;AACA;AAHA;AArDA,CAAA","sourcesContent":["<template>\n  <div>\n    {{ prefix }}{{ newValueFormatted }}{{ suffix }}\n  </div>\n</template>\n\n<script>\nimport numeral from 'numeral'\n\nexport default {\n  name: 'GrowingNumber',\n  props: {\n    prefix: {\n      type: String,\n      default: null\n    },\n    suffix: {\n      type: String,\n      default: null\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n  data () {\n    return {\n      newValue: 0,\n      step: 0\n    }\n  },\n  computed: {\n    newValueFormatted () {\n      return (this.newValue < 1000) ? this.newValue : numeral(this.newValue).format('0,0')\n    }\n  },\n  mounted () {\n    this.growInit()\n  },\n  methods: {\n    growInit () {\n      let m = this.value / (this.duration / 25)\n      this.grow(m)\n    },\n    grow (m) {\n      let v = Math.ceil(this.newValue + m)\n\n      if (v > this.value) {\n        this.newValue = this.value\n        return false\n      }\n\n      this.newValue = v\n      setTimeout(() => {\n        this.grow(m)\n      }, 25)\n    }\n  },\n  watch: {\n    value () {\n      this.growInit()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}