{"remainingRequest":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/components/FilePicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/components/FilePicker.vue","mtime":1573546378000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'FilePicker',\n  props: {\n    accept: {\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      file: null,\n      uploadPercent: 0\n    };\n  },\n  computed: {\n    buttonLabel: function buttonLabel() {\n      return !this.file ? 'Pick a file' : 'Pick another file';\n    }\n  },\n  methods: {\n    upload: function upload(file) {\n      this.$emit('input', file); // Use this as an example for handling file uploads\n      // let formData = new FormData()\n      // formData.append('file', file)\n      // axios\n      //   .post(window.routeMediaStore, formData, {\n      //     headers: {\n      //       'Content-Type': 'multipart/form-data'\n      //     },\n      //     onUploadProgress: this.progressEvent\n      //   })\n      //   .then(r => {\n      //\n      //   })\n      //   .catch(err => {\n      //     this.$buefy.toast.open({\n      //       message: `Error: ${err.message}`,\n      //       type: 'is-danger'\n      //     })\n      //   })\n    },\n    progressEvent: function progressEvent(_progressEvent) {\n      this.uploadPercent = Math.round(_progressEvent.loaded * 100 / _progressEvent.total);\n    }\n  }\n};",{"version":3,"sources":["FilePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,CAAA,KAAA,IAAA,GAAA,aAAA,GAAA,mBAAA;AACA;AAHA,GAdA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,IADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,IAAA,EADA,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAvBA;AAwBA,IAAA,aAxBA,yBAwBA,cAxBA,EAwBA;AACA,WAAA,aAAA,GAAA,IAAA,CAAA,KAAA,CAAA,cAAA,CAAA,MAAA,GAAA,GAAA,GAAA,cAAA,CAAA,KAAA,CAAA;AACA;AA1BA;AAnBA,CAAA","sourcesContent":["<template>\n  <b-field class=\"file\">\n    <b-upload v-model=\"file\" @input=\"upload\" :accept=\"accept\">\n      <a class=\"button is-primary\">\n        <b-icon icon=\"upload\" custom-size=\"default\"></b-icon>\n        <span>{{ buttonLabel }}</span>\n      </a>\n    </b-upload>\n    <span class=\"file-name\" v-if=\"file\">{{ file.name }}</span>\n  </b-field>\n</template>\n\n<script>\nexport default {\n  name: 'FilePicker',\n  props: {\n    accept: {\n      type: String,\n      default: null\n    }\n  },\n  data () {\n    return {\n      file: null,\n      uploadPercent: 0\n    }\n  },\n  computed: {\n    buttonLabel () {\n      return !this.file ? 'Pick a file' : 'Pick another file'\n    }\n  },\n  methods: {\n    upload (file) {\n      this.$emit('input', file)\n      // Use this as an example for handling file uploads\n      // let formData = new FormData()\n      // formData.append('file', file)\n\n      // axios\n      //   .post(window.routeMediaStore, formData, {\n      //     headers: {\n      //       'Content-Type': 'multipart/form-data'\n      //     },\n      //     onUploadProgress: this.progressEvent\n      //   })\n      //   .then(r => {\n      //\n      //   })\n      //   .catch(err => {\n      //     this.$buefy.toast.open({\n      //       message: `Error: ${err.message}`,\n      //       type: 'is-danger'\n      //     })\n      //   })\n    },\n    progressEvent (progressEvent) {\n      this.uploadPercent = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}