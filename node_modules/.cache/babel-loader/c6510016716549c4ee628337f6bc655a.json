{"remainingRequest":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/components/ProfileUpdateForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/components/ProfileUpdateForm.vue","mtime":1573546378000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport FilePicker from '@/components/FilePicker';\nimport CardComponent from '@/components/CardComponent';\nexport default {\n  name: 'ProfileUpdateForm',\n  components: {\n    CardComponent: CardComponent,\n    FilePicker: FilePicker\n  },\n  data: function data() {\n    return {\n      isFileUploaded: false,\n      isLoading: false,\n      form: {\n        name: null,\n        email: null\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(['userName', 'userEmail'])),\n  mounted: function mounted() {\n    this.form.name = this.userName;\n    this.form.email = this.userEmail;\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      this.isLoading = true;\n      setTimeout(function () {\n        _this.isLoading = false;\n\n        _this.$store.commit('user', _this.form);\n\n        _this.$buefy.snackbar.open({\n          message: 'Updated',\n          queue: false\n        });\n      }, 500);\n    }\n  },\n  watch: {\n    userName: function userName(newValue) {\n      this.form.name = newValue;\n    },\n    userEmail: function userEmail(newValue) {\n      this.form.email = newValue;\n    }\n  }\n};",{"version":3,"sources":["ProfileUpdateForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA;AAHA,KAAA;AAQA,GAfA;AAgBA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,UADA,EAEA,WAFA,CAAA,CADA,CAhBA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,SAAA,IAAA,CAAA,IAAA,GAAA,KAAA,QAAA;AACA,SAAA,IAAA,CAAA,KAAA,GAAA,KAAA,SAAA;AACA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,UAAA,OAAA,EAAA,SADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAAA;AAIA,OAPA,EAOA,GAPA,CAAA;AAQA;AAXA,GA1BA;AAuCA,EAAA,KAAA,EAAA;AACA,IAAA,QADA,oBACA,QADA,EACA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,QAAA;AACA,KAHA;AAIA,IAAA,SAJA,qBAIA,QAJA,EAIA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,QAAA;AACA;AANA;AAvCA,CAAA","sourcesContent":["<template>\n  <card-component title=\"Edit Profile\" icon=\"account-circle\">\n    <form @submit.prevent=\"submit\">\n      <b-field horizontal label=\"Avatar\">\n        <file-picker/>\n      </b-field>\n      <hr>\n      <b-field horizontal label=\"Name\" message=\"Required. Your name\">\n        <b-input v-model=\"form.name\" name=\"name\" required/>\n      </b-field>\n      <b-field horizontal label=\"E-mail\" message=\"Required. Your e-mail\">\n        <b-input v-model=\"form.email\" name=\"email\" type=\"email\" required/>\n      </b-field>\n      <hr>\n      <b-field horizontal>\n        <div class=\"control\">\n          <button type=\"submit\" class=\"button is-primary\" :class=\"{'is-loading':isLoading}\">\n            Submit\n          </button>\n        </div>\n      </b-field>\n    </form>\n  </card-component>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport FilePicker from '@/components/FilePicker'\nimport CardComponent from '@/components/CardComponent'\n\nexport default {\n  name: 'ProfileUpdateForm',\n  components: {\n    CardComponent,\n    FilePicker\n  },\n  data () {\n    return {\n      isFileUploaded: false,\n      isLoading: false,\n      form: {\n        name: null,\n        email: null\n      }\n    }\n  },\n  computed: {\n    ...mapState([\n      'userName',\n      'userEmail'\n    ])\n  },\n  mounted () {\n    this.form.name = this.userName\n    this.form.email = this.userEmail\n  },\n  methods: {\n    submit () {\n      this.isLoading = true\n      setTimeout(() => {\n        this.isLoading = false\n        this.$store.commit('user', this.form)\n        this.$buefy.snackbar.open({\n          message: 'Updated',\n          queue: false\n        })\n      }, 500)\n    }\n  },\n  watch: {\n    userName (newValue) {\n      this.form.name = newValue\n    },\n    userEmail (newValue) {\n      this.form.email = newValue\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}