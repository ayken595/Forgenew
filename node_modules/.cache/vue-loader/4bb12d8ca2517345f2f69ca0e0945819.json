{"remainingRequest":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/src/views/Home.vue","mtime":1573546378000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/maciej/Pulpit/admin-one-vue-bulma-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport * as chartConfig from '@/components/Charts/chart.config'\nimport TitleBar from '@/components/TitleBar'\nimport HeroBar from '@/components/HeroBar'\nimport Tiles from '@/components/Tiles'\nimport CardWidget from '@/components/CardWidget'\nimport CardComponent from '@/components/CardComponent'\nimport LineChart from '@/components/Charts/LineChart'\nimport ClientsTableSample from '@/components/ClientsTableSample'\nexport default {\n  name: 'home',\n  components: {\n    ClientsTableSample,\n    LineChart,\n    CardComponent,\n    CardWidget,\n    Tiles,\n    HeroBar,\n    TitleBar\n  },\n  data () {\n    return {\n      defaultChart: {\n        chartData: null,\n        extraOptions: chartConfig.chartOptionsMain\n      }\n    }\n  },\n  computed: {\n    titleStack () {\n      return [\n        'Admin',\n        'Dashboard'\n      ]\n    }\n  },\n  mounted () {\n    this.fillChartData()\n\n    this.$buefy.snackbar.open({\n      message: 'Welcome back',\n      queue: false\n    })\n  },\n  methods: {\n    randomChartData (n) {\n      let data = []\n\n      for (let i = 0; i < n; i++) {\n        data.push(Math.round(Math.random() * 200))\n      }\n\n      return data\n    },\n    fillChartData () {\n      this.defaultChart.chartData = {\n        datasets: [\n          {\n            fill: false,\n            borderColor: chartConfig.chartColors.default.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: chartConfig.chartColors.default.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: chartConfig.chartColors.default.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.randomChartData(9)\n          },\n          {\n            fill: false,\n            borderColor: chartConfig.chartColors.default.info,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: chartConfig.chartColors.default.info,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: chartConfig.chartColors.default.info,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.randomChartData(9)\n          },\n          {\n            fill: false,\n            borderColor: chartConfig.chartColors.default.danger,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: chartConfig.chartColors.default.danger,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: chartConfig.chartColors.default.danger,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.randomChartData(9)\n          }\n        ],\n        labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09']\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <title-bar :title-stack=\"titleStack\"/>\n    <hero-bar :has-right-visible=\"false\">\n      Dashboard\n    </hero-bar>\n    <section class=\"section is-main-section\">\n      <tiles>\n        <card-widget class=\"tile is-child\" type=\"is-primary\" icon=\"account-multiple\" :number=\"512\" label=\"Clients\"/>\n        <card-widget class=\"tile is-child\" type=\"is-info\" icon=\"cart-outline\" :number=\"7770\" prefix=\"$\" label=\"Sales\"/>\n        <card-widget class=\"tile is-child\" type=\"is-success\" icon=\"chart-timeline-variant\" :number=\"256\" suffix=\"%\" label=\"Performance\"/>\n      </tiles>\n\n      <card-component title=\"Performance\" @header-icon-click=\"fillChartData\" icon=\"finance\" header-icon=\"reload\">\n        <div v-if=\"defaultChart.chartData\" class=\"chart-area\">\n          <line-chart style=\"height: 100%\"\n                      ref=\"bigChart\"\n                      chart-id=\"big-line-chart\"\n                      :chart-data=\"defaultChart.chartData\"\n                      :extra-options=\"defaultChart.extraOptions\">\n          </line-chart>\n        </div>\n      </card-component>\n\n      <card-component title=\"Clients\" class=\"has-table has-mobile-sort-spaced\">\n        <clients-table-sample data-url=\"/data-sources/clients.json\"/>\n      </card-component>\n    </section>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport * as chartConfig from '@/components/Charts/chart.config'\nimport TitleBar from '@/components/TitleBar'\nimport HeroBar from '@/components/HeroBar'\nimport Tiles from '@/components/Tiles'\nimport CardWidget from '@/components/CardWidget'\nimport CardComponent from '@/components/CardComponent'\nimport LineChart from '@/components/Charts/LineChart'\nimport ClientsTableSample from '@/components/ClientsTableSample'\nexport default {\n  name: 'home',\n  components: {\n    ClientsTableSample,\n    LineChart,\n    CardComponent,\n    CardWidget,\n    Tiles,\n    HeroBar,\n    TitleBar\n  },\n  data () {\n    return {\n      defaultChart: {\n        chartData: null,\n        extraOptions: chartConfig.chartOptionsMain\n      }\n    }\n  },\n  computed: {\n    titleStack () {\n      return [\n        'Admin',\n        'Dashboard'\n      ]\n    }\n  },\n  mounted () {\n    this.fillChartData()\n\n    this.$buefy.snackbar.open({\n      message: 'Welcome back',\n      queue: false\n    })\n  },\n  methods: {\n    randomChartData (n) {\n      let data = []\n\n      for (let i = 0; i < n; i++) {\n        data.push(Math.round(Math.random() * 200))\n      }\n\n      return data\n    },\n    fillChartData () {\n      this.defaultChart.chartData = {\n        datasets: [\n          {\n            fill: false,\n            borderColor: chartConfig.chartColors.default.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: chartConfig.chartColors.default.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: chartConfig.chartColors.default.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.randomChartData(9)\n          },\n          {\n            fill: false,\n            borderColor: chartConfig.chartColors.default.info,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: chartConfig.chartColors.default.info,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: chartConfig.chartColors.default.info,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.randomChartData(9)\n          },\n          {\n            fill: false,\n            borderColor: chartConfig.chartColors.default.danger,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: chartConfig.chartColors.default.danger,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: chartConfig.chartColors.default.danger,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.randomChartData(9)\n          }\n        ],\n        labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09']\n      }\n    }\n  }\n}\n</script>\n"]}]}